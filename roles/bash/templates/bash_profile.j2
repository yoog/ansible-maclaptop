# colors
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# path stuff
export PATH="/usr/local/git/bin:/sw/bin/:/usr/local/bin:/usr/local/:/usr/local/sbin:/usr/local/mysql/bin:$PATH"

# default prompt
#export PS1="\h:\W \u\$"

# prompt
export PS1="\u@\h \e[1;36m\w\e[m> "

# aliases
alias ll="ls -lh"

alias awsdev="export AWS_PROFILE='dev'"
alias awsprod="export AWS_PROFILE='prod'"
alias tiqdeploy="ssh textiq@tiq-deploy-0-dev.textiq.net"
alias vim="nvim"
alias dev="cd ~/dev"
alias devpersonal="cd ~/devpersonal"
alias path='echo -e ${PATH//:/\\n}' # taken from https://gist.github.com/natelandau/10654137

# kubernetes alias
alias kcgc="kubectl config get-contexts"

# git functions

# delete merged branches
git-branch-cleanup() {
    echo "git branch --merged | egrep -v \"(^\*|master|main|dev|develop)\" | xargs git branch -d"
    git branch --merged | egrep -v "(^\*|master|main|dev|develop)" | xargs git branch -d
}

# clean up branches that have been squashed and merged on remote
git-branch-cleanup-squashed() {
   git checkout -q $1 && git for-each-ref refs/heads/ "--format=%(refname:short)" | while read branch; do mergeBase=$(git merge-base $1 $branch) && [[ $(git cherry $1 $(git commit-tree $(git rev-parse "$branch^{tree}") -p $mergeBase -m _)) == "-"* ]] && git branch -D $branch; done
}


# checkout repo and pull
git-checkout-pull() {
    echo "git checkout $1 && git pull"
    git checkout $1 && git pull
}

# push and set upstream branch name
git-push-setupstream() {
    echo "git push --set-upstream origin $(git branch --show-current)"
    git push --set-upstream origin $(git branch --show-current)
}

# git status
gs() {
    echo "git status"
    git status
}

# kubernetes functions

# change namespace
ksns() {
  kubectl config set-context --current --namespace=$1
}
